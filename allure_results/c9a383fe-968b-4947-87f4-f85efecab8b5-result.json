{"name": "Ручка /api/v1/orders/accept/", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 409\n +  where 404 = <Response [404]>.status_code", "trace": "self = <test_api.tests.test_accept_order.TestAcceptOrder object at 0x0000027A8CBEB520>, create_order = 606533, login_new_courier = 277732\n\n    @allure.title(\"Ручка /api/v1/orders/accept/\")\n    @allure.description(\n        \"Создаём заказ, получаем трек номер, создаём двух курьеров, логинимся, получаем id, затем принимаем один заказ каждым курьером.\")\n    def test_accept_order_twice_error(self, create_order, login_new_courier):\n        with allure.step('Получение трек-номера заказа'):\n            track_number = create_order\n    \n        with allure.step('Создание двух новых курьеров и получение их ID'):\n            id_courier_0 = login_new_courier\n            id_courier_1 = login_new_courier\n    \n        with allure.step('Приём одного заказа двумя курьерами'):\n            response = requests.put(URLS.URL_MAIN + URLS.URL_ACCEPT_ORDER + str(track_number) + \"?\" + \"courierId=\" + str(id_courier_0))\n            response1 = requests.put(URLS.URL_MAIN + URLS.URL_ACCEPT_ORDER + str(track_number) + \"?\" + \"courierId=\" + str(id_courier_1))\n    \n        with allure.step('Проверки на статус и ответ'):\n>           assert response1.status_code == 409\nE           assert 404 == 409\nE            +  where 404 = <Response [404]>.status_code\n\ntest_api\\tests\\test_accept_order.py:88: AssertionError"}, "description": "Создаём заказ, получаем трек номер, создаём двух курьеров, логинимся, получаем id, затем принимаем один заказ каждым курьером.", "steps": [{"name": "Получение трек-номера заказа", "status": "passed", "start": 1710620269350, "stop": 1710620269350}, {"name": "Создание двух новых курьеров и получение их ID", "status": "passed", "start": 1710620269350, "stop": 1710620269350}, {"name": "Приём одного заказа двумя курьерами", "status": "passed", "start": 1710620269350, "stop": 1710620269445}, {"name": "Проверки на статус и ответ", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 409\n +  where 404 = <Response [404]>.status_code\n", "trace": "  File \"C:\\!Learning\\Yandex_auto\\qa_sprint_7\\test_api\\tests\\test_accept_order.py\", line 88, in test_accept_order_twice_error\n    assert response1.status_code == 409\n"}, "start": 1710620269445, "stop": 1710620269445}], "start": 1710620269350, "stop": 1710620269445, "uuid": "f1d51451-f1ed-4f83-9a4c-343e87faac83", "historyId": "60f7f35133c746add7310232865867bd", "testCaseId": "60f7f35133c746add7310232865867bd", "fullName": "test_api.tests.test_accept_order.TestAcceptOrder#test_accept_order_twice_error", "labels": [{"name": "parentSuite", "value": "test_api.tests"}, {"name": "suite", "value": "test_accept_order"}, {"name": "subSuite", "value": "TestAcceptOrder"}, {"name": "host", "value": "LAPTOP-KS9V29SF"}, {"name": "thread", "value": "23412-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api.tests.test_accept_order"}]}